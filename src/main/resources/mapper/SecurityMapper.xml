<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.njfu.ia.sys.mapper.SecurityMapper">

    <select id="selectUser" resultType="User">
        SELECT id, name, username, mail, password, salt, status
        FROM user
        WHERE username = #{username}
    </select>

    <select id="selectRoles" resultType="Role">
        SELECT r.id AS id, r.role_name AS role_name
        FROM role r LEFT JOIN user_roles ur ON r.id = ur.role_id
        <where>
            <if test="null != roleName and !''.equals(roleName)">
                r.role_name = #{roleName}
            </if>
            <if test="null != userId">
                AND ur.user_id = #{userId}
            </if>
        </where>
        ORDER BY id
    </select>

    <select id="selectPermissions" resultType="Permission">
        SELECT p.id AS id, p.url AS url, p.url_name AS url_name, p.perm AS perm
        FROM permission p LEFT JOIN role_permissions rp ON rp.permission_id = p.id
        <where>
            id != 1
            <if test="null != roleId">
                AND rp.role_id = #{roleId}
            </if>
        </where>
    </select>

    <select id="selectStringPermissions" resultType="java.lang.String">
        SELECT p.perm
        FROM role_permissions rp LEFT JOIN permission p ON rp.permission_id = p.id
        WHERE rp.role_id IN (SELECT r.id
        FROM user_roles ur LEFT JOIN role r ON ur.role_id = r.id
        WHERE ur.user_id = #{userId})
    </select>

    <insert id="insertRole">
        INSERT INTO role (id, role_name)
        VALUES (NULL, #{roleName})
    </insert>

    <delete id="deleteRole">
        DELETE FROM role
        WHERE id = #{roleId}
    </delete>

    <insert id="insertRolePermissions">
        INSERT INTO role_permissions(role_id, permission_id)
        VALUES
        <foreach collection="permissionIds" item="item" separator=",">
            (#{roleId}, #{item})
        </foreach>
    </insert>

    <delete id="deleteRolePermissions">
        DELETE FROM role_permissions
        WHERE role_id = #{roleId}
        <if test="null != permissionIds and !permissionIds.isEmpty()">
            AND permission_id IN
            <foreach collection="permissionIds" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </delete>

    <insert id="insertUserRoles">
        INSERT INTO user_roles(user_id, role_id)
        VALUES
        <foreach collection="roleIds" item="item" separator=",">
            (#{userId}, #{item})
        </foreach>
    </insert>

    <delete id="deleteUserRoles">
        DELETE FROM user_roles
        <where>
            <if test="null != userId">
                user_id = #{userId}
            </if>
            <if test="null != roleIds and !roleIds.isEmpty()">
                AND role_id IN
                <foreach collection="roleIds" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>

    <select id="selectUsers" resultType="User">
        SELECT id, name, username, mail, status
        FROM user
        <where>
            <if test="null != name and !''.equals(name)">
                name LIKE CONCAT('%', #{name}, '%')
            </if>
        </where>
        ORDER BY id
    </select>

    <insert id="insertUser">
        INSERT INTO user (id, name, username, mail, password, salt, status)
        VALUES (NULL, #{name}, #{username}, #{mail}, #{password}, #{salt}, #{status})
    </insert>

    <update id="updateUser">
        UPDATE user
        <set>
            <if test="null != name and !''.equals(name)">
                name = #{name},
            </if>
            <if test="null != mail and !''.equals(mail)">
                mail = #{mail},
            </if>
            <if test="null != password and !''.equals(password)">
                password = #{password},
            </if>
            <if test="null != salt and !''.equals(salt)">
                salt = #{salt},
            </if>
            <if test="null != status">
                status = #{status}
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteUser">
        DELETE FROM user
        WHERE id = #{userId}
    </delete>
</mapper>	